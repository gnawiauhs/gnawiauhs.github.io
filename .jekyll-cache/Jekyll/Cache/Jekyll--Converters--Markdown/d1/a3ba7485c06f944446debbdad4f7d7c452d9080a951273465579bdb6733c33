I"<p>HTML5是HTML第五代语法标准，发布于2014年10月28日。虽然早已经不是什么新东西，但是平时真正用到项目中的 HTML5 特性并不是很多（可能是因为我做的产品大多数是PC端的，需要兼容IE低版本浏览器），所以今天抽空来重新熟悉一下 HTML5 到底为我们提供了哪些不一样的东西。</p>

<h2 id="1新标签">1、新标签</h2>

<p>大家都知道 HTML5 摒弃旧版本的一些如：<code class="highlighter-rouge">&lt;center&gt;</code> <code class="highlighter-rouge">&lt;font&gt;</code> <code class="highlighter-rouge">&lt;frame&gt;</code> 等这类没有意义又容易出现问题的标签，保留却重定义一些标签，同时新增了一些如 <code class="highlighter-rouge">&lt;header&gt;</code> <code class="highlighter-rouge">&lt;footer&gt;</code> <code class="highlighter-rouge">&lt;nav&gt;</code> <code class="highlighter-rouge">&lt;article&gt;</code> 等这类语义化标签。</p>

<p>使用语义化标签的目的，是为了使网页结构更加清晰，方便阅读，同时也方便搜索引擎根据标签的语义确定上下文和权重。</p>

<p>HTML5 新增的标签大致如下：</p>

<h3 id="11-删除了哪些标签">1.1 删除了哪些标签</h3>

<p><strong>纯表现的元素</strong></p>

<p><code class="highlighter-rouge">besefont</code>、 <code class="highlighter-rouge">big</code>、<code class="highlighter-rouge">center</code>、 <code class="highlighter-rouge">font</code>、<code class="highlighter-rouge">s</code>、<code class="highlighter-rouge">strike</code>、<code class="highlighter-rouge">tt</code>、<code class="highlighter-rouge">u</code></p>

<p><strong>对可用性产生负面影响的元素</strong></p>

<p><code class="highlighter-rouge">frame</code>、<code class="highlighter-rouge">frameset</code>、<code class="highlighter-rouge">noframes</code></p>

<p><strong>产生混肴的元素</strong></p>

<p><code class="highlighter-rouge">acronym</code>、 <code class="highlighter-rouge">applet</code>、 <code class="highlighter-rouge">isindex</code>、<code class="highlighter-rouge">dir</code></p>

<h3 id="12-重定义了哪些标签">1.2 重定义了哪些标签</h3>

<p><strong>显示不变，只是表达的含义进行了重新定义的标签</strong></p>

<table>
  <thead>
    <tr>
      <th>标签</th>
      <th>备注</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><a href="http://www.runoob.com/tags/tag-b.html">b</a></td>
      <td><b>代表内联文本，通常是粗体，没用传递表示重要的意思</b></td>
    </tr>
    <tr>
      <td><a href="http://www.runoob.com/tags/tag-i.html">i</a></td>
      <td><i>代表内联文本，通常是斜体，没有传递表达重要的意思</i></td>
    </tr>
    <tr>
      <td><a href="http://www.runoob.com/tags/tag-dd.html">dd</a></td>
      <td>可以同<code class="highlighter-rouge">detailsy</code>与<code class="highlighter-rouge">figure</code>一同使用，定义包含文本，<code class="highlighter-rouge">dialog</code>亦可使用</td>
    </tr>
    <tr>
      <td><a href="http://www.runoob.com/tags/tag-dt.html">dt</a></td>
      <td>可以同<code class="highlighter-rouge">details</code>与<code class="highlighter-rouge">figrue</code>一同使用，汇总细节，<code class="highlighter-rouge">dialog</code>也可用</td>
    </tr>
    <tr>
      <td><a href="http://www.runoob.com/tags/tag-hr.html">hr</a></td>
      <td>表示主题结束，而不是水平线，虽然显示相同</td>
    </tr>
    <tr>
      <td><a href="http://www.runoob.com/tags/tag-menu.html">menu</a></td>
      <td>重新定义用户界面的菜单，配合<code class="highlighter-rouge">commond</code>或者<code class="highlighter-rouge">menuitem</code>使用</td>
    </tr>
    <tr>
      <td><a href="http://www.runoob.com/tags/tag-small.html">small</a></td>
      <td><small>表示小字体，例如打印注释或则法律条款</small></td>
    </tr>
    <tr>
      <td><a href="http://www.runoob.com/tags/tag-strong.html">strong</a></td>
      <td><strong>表示重要性而不是强调符号</strong></td>
    </tr>
  </tbody>
</table>

<h3 id="13-新增了哪些标签">1.3 新增了哪些标签</h3>

<h4 id="131-结构标签块状元素有意义的div">1.3.1 结构标签（块状元素）——有意义的div</h4>

<table>
  <thead>
    <tr>
      <th>标签</th>
      <th>备注</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><a href="http://www.runoob.com/tags/tag-article.html">article</a></td>
      <td>标记定义一篇文章</td>
    </tr>
    <tr>
      <td><a href="http://www.runoob.com/tags/tag-header.html">header</a></td>
      <td>标记定义一个页面或一个区域的头部</td>
    </tr>
    <tr>
      <td><a href="http://www.runoob.com/tags/tag-nav.html">nav</a></td>
      <td>标记定义导航链接</td>
    </tr>
    <tr>
      <td><a href="http://www.runoob.com/tags/tag-section.html">section</a></td>
      <td>标记定义一个区域</td>
    </tr>
    <tr>
      <td><a href="http://www.runoob.com/tags/tag-aisde.html">aisde</a></td>
      <td>标记定义页面内容的侧边栏</td>
    </tr>
    <tr>
      <td><a href="http://www.runoob.com/tags/tag-hgroup.html">hgroup</a></td>
      <td>标记定义文件中一个区块的相关信息</td>
    </tr>
    <tr>
      <td><a href="http://www.runoob.com/tags/tag-figure.html">figure</a></td>
      <td>标记定义一组媒体内容以及他们的标题</td>
    </tr>
    <tr>
      <td><a href="http://www.runoob.com/tags/tag-figcaption.html">figcaption</a></td>
      <td>标记定义figure元素的标题</td>
    </tr>
    <tr>
      <td><a href="http://www.runoob.com/tags/tag-footer.html">footer</a></td>
      <td>标记定义一个页面或一个区域的底部</td>
    </tr>
    <tr>
      <td><a href="http://www.runoob.com/tags/tag-dialog.html">dialog</a></td>
      <td>标记定义一个对话框（会话框）类似微信</td>
    </tr>
  </tbody>
</table>

<h4 id="132-多媒体标签">1.3.2 多媒体标签</h4>

<table>
  <thead>
    <tr>
      <th>标签</th>
      <th>备注</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><a href="http://www.runoob.com/tags/tag-video.html">video</a></td>
      <td>标记定义一个视屏</td>
    </tr>
    <tr>
      <td><a href="http://www.runoob.com/tags/tag-audio.html">audio</a></td>
      <td>标记定义音频内容</td>
    </tr>
    <tr>
      <td><a href="http://www.runoob.com/tags/tag-source.html">source</a></td>
      <td>标记定义媒体资源</td>
    </tr>
    <tr>
      <td><a href="http://www.runoob.com/tags/tag-canvas.html">canvas</a></td>
      <td>标记定义图片</td>
    </tr>
    <tr>
      <td><a href="http://www.runoob.com/tags/tag-embed.html">embed</a></td>
      <td>标记定义外部的可交互的内容或插件，比如flash</td>
    </tr>
  </tbody>
</table>

<blockquote>
  <p>标签的意义：多媒体标签的出现意味着多媒体的发展以及支持不适用插件的情况下即可操作媒体文件，极大提升了用户体验。</p>
</blockquote>

<p>关于多媒体标签的应用，笔者会另外发布相关文章，在此不过多展开。</p>

<h4 id="133-web应用标签">1.3.3 Web应用标签</h4>

<p><strong>状态标签</strong></p>

<table>
  <thead>
    <tr>
      <th>标签</th>
      <th>备注</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><a href="http://www.runoob.com/tags/tag-meter.html">meter</a></td>
      <td>实时状态显示：气压、气温。 例：<meter value="0.3"></meter>30%</td>
    </tr>
    <tr>
      <td><a href="http://www.runoob.com/tags/tag-progress.html">progress</a></td>
      <td>任务过程：安装、 加载。    例：<progress></progress></td>
    </tr>
  </tbody>
</table>

<p><strong>列表标签</strong></p>

<table>
  <thead>
    <tr>
      <th>标签</th>
      <th>备注</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><a href="http://www.runoob.com/tags/tag-datalist.html">datalist</a></td>
      <td>为input标记定义一个下拉列表，配合option</td>
    </tr>
    <tr>
      <td><a href="http://www.runoob.com/tags/tag-details.html">details</a></td>
      <td>标记定义一个元素的详细内容，配合summary</td>
    </tr>
    <tr>
      <td><a href="http://www.runoob.com/tags/tag-summary.html">summary</a></td>
      <td>标签为<code class="highlighter-rouge">&lt;details&gt;</code> 元素定义一个可见的标题。当用户点击标题时会显示出详细信息。</td>
    </tr>
  </tbody>
</table>

<p><strong>Menu</strong></p>

<table>
  <thead>
    <tr>
      <th>标签</th>
      <th>备注</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><a href="http://www.runoob.com/tags/tag-menu.html">menu</a></td>
      <td>命令列表（目前所有的主流浏览器都不支持）</td>
    </tr>
    <tr>
      <td><a href="http://www.runoob.com/tags/tag-menuitem.html">menuitem</a></td>
      <td>menu命令列表的标签（只有FireFox9.0+支持）</td>
    </tr>
    <tr>
      <td><a href="http://www.runoob.com/tags/tag-command.html">command</a></td>
      <td>menu标记定义一个命令按钮（只有IE9支持）</td>
    </tr>
  </tbody>
</table>

<h4 id="134-其他标签">1.3.4 其他标签</h4>

<p><strong>注释标签</strong></p>

<table>
  <thead>
    <tr>
      <th>标签</th>
      <th>备注</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><a href="http://www.runoob.com/tags/tag-ruby.html">ruby</a></td>
      <td>标记定义注释或音标</td>
    </tr>
    <tr>
      <td><a href="http://www.runoob.com/tags/tag-rp.html">rp</a></td>
      <td>告诉那些不支持ruby的元素的浏览器如何去显示</td>
    </tr>
    <tr>
      <td><a href="http://www.runoob.com/tags/tag-et.html">et</a></td>
      <td>标记定义对rubyd 注释内容文本</td>
    </tr>
  </tbody>
</table>

<p><strong>其他标签</strong></p>

<table>
  <thead>
    <tr>
      <th>标签</th>
      <th>备注</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><a href="http://www.runoob.com/tags/tag-mark.html">mark</a></td>
      <td>标记定义有标记的文本（黄色选中状态）</td>
    </tr>
    <tr>
      <td><a href="http://www.runoob.com/tags/tag-output.html">output</a></td>
      <td>标记定义一些输出类型，计算表单结果配合oninput事件</td>
    </tr>
    <tr>
      <td><a href="http://www.runoob.com/tags/tag-keygen.html">keygen</a></td>
      <td>标记定义表单里生成的键值（加密信息传送）</td>
    </tr>
    <tr>
      <td><a href="http://www.runoob.com/tags/tag-time.html">time</a></td>
      <td>标记定义一个日期/时间，目前所有主流的浏览器都不支持</td>
    </tr>
  </tbody>
</table>

<h3 id="15-语义化标签兼容性">1.5 语义化标签兼容性</h3>

<p>对于不支持HTML5语法的浏览器（如：IE8及以下版本浏览器），要想使用这些新标签，需要那个通过JavaScript创建该标签。具体做法如下（以<code class="highlighter-rouge">&lt;header&gt;</code>标签为例）：</p>
<ol>
  <li>在CSS中设置标签样式为块级
    <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>header { display: block; }
</code></pre></div>    </div>
  </li>
  <li>通过JavaScript的DOM方式创建该标签
    <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>document.createElement('header');
</code></pre></div>    </div>
  </li>
</ol>

<p>由于HTML5新增的标签很多， 如果用上述方法创建标签也比较麻烦，所以我们可以通过简单引用<a href="https://github.com/aFarkas/html5shiv">html5shiv.js</a>文件解决这个问题。</p>

<hr />

<h2 id="2新功能">2、新功能</h2>

<h3 id="21-表单元素">2.1 表单元素</h3>

<p>自带格式验证</p>

<table>
  <thead>
    <tr>
      <th>类型</th>
      <th>备注</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="highlighter-rouge">&lt;input type="email"&gt;</code></td>
      <td>邮箱</td>
    </tr>
    <tr>
      <td><code class="highlighter-rouge">&lt;input type="number"&gt;</code></td>
      <td>数字</td>
    </tr>
    <tr>
      <td><code class="highlighter-rouge">&lt;input type="url"&gt;</code></td>
      <td>地址</td>
    </tr>
    <tr>
      <td><code class="highlighter-rouge">&lt;input type="range"&gt;</code></td>
      <td>滑块</td>
    </tr>
    <tr>
      <td><code class="highlighter-rouge">&lt;input type="color"&gt;</code></td>
      <td>颜色</td>
    </tr>
    <tr>
      <td><code class="highlighter-rouge">&lt;input type="time"&gt;</code></td>
      <td>时间</td>
    </tr>
    <tr>
      <td>……</td>
      <td> </td>
    </tr>
  </tbody>
</table>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;form</span> <span class="na">autocomplete=</span><span class="s">"on"</span> <span class="na">novalidate</span><span class="nt">&gt;&lt;/form&gt;</span>
<span class="c">&lt;!--
autocomplete: on表示开启智能提示；off表示关闭智能提示
novalidate: 关闭智能验证
--&gt;</span>
</code></pre></div></div>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;form</span> <span class="na">action=</span><span class="s">""</span> <span class="na">method=</span><span class="s">"get"</span> <span class="na">id=</span><span class="s">"fm"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"text"</span> <span class="na">value=</span><span class="s">""</span> <span class="na">autofocus</span> <span class="na">placeholder=</span><span class="s">"请输入名字"</span> <span class="na">required</span><span class="nt">&gt;</span>
  <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"submit"</span> <span class="na">value=</span><span class="s">"提交"</span><span class="nt">&gt;</span>
<span class="nt">&lt;/form&gt;</span>
<span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"text"</span> <span class="na">name=</span><span class="s">"name"</span> <span class="na">form=</span><span class="s">"fm"</span><span class="nt">&gt;</span>
<span class="c">&lt;!--
autofocus: 自动获取焦点
placeholder: 文本框提示信息
required: 该属性出现，当前的表单元素必须有验证
form: 该属性出现在表单标签中，值设置为form标签的ID值，该标签可以提交
--&gt;</span>
</code></pre></div></div>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"text"</span> <span class="na">value=</span><span class="s">""</span> <span class="na">list=</span><span class="s">"url_list"</span><span class="nt">&gt;</span>
<span class="nt">&lt;datalist</span> <span class="na">id=</span><span class="s">"url_list"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;option</span> <span class="na">value=</span><span class="s">"https://www.baidu.com"</span><span class="nt">&gt;</span>百度<span class="nt">&lt;/option&gt;</span>
    <span class="nt">&lt;option</span> <span class="na">value=</span><span class="s">"https://www.google.com"</span><span class="nt">&gt;</span>谷歌<span class="nt">&lt;/option&gt;</span>
    <span class="nt">&lt;option</span> <span class="na">value=</span><span class="s">"https://www.youku.com"</span><span class="nt">&gt;</span>优酷<span class="nt">&lt;/option&gt;</span>
    <span class="nt">&lt;option</span> <span class="na">value=</span><span class="s">"https://www.qq.com"</span><span class="nt">&gt;</span>腾讯<span class="nt">&lt;/option&gt;</span>
<span class="nt">&lt;/datalist&gt;</span>
</code></pre></div></div>

<h3 id="22-dom扩展">2.2 DOM扩展</h3>

<h4 id="221-获取元素">2.2.1 获取元素</h4>

<p>原来我们获取元素的方法是：</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// 通过id获取元素</span>
<span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="dl">"</span><span class="s2">id</span><span class="dl">"</span><span class="p">);</span>
<span class="c1">// 通过class获取元素</span>
<span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByClassName</span><span class="p">(</span><span class="dl">"</span><span class="s2">class</span><span class="dl">"</span><span class="p">);</span>
<span class="c1">// 通过标签名获取元素</span>
<span class="nb">document</span><span class="p">.</span><span class="nx">getElementByTagName</span><span class="p">(</span><span class="dl">"</span><span class="s2">target</span><span class="dl">"</span><span class="p">);</span>
</code></pre></div></div>

<p>或者使用 jQuery 的 <code class="highlighter-rouge">$("选择器")</code>。</p>

<p>HTML5为我们带来了新方法：</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// 获取第一个与选择器匹配的元素</span>
<span class="nb">document</span><span class="p">.</span><span class="nx">querySelector</span><span class="p">(</span><span class="dl">"</span><span class="s2">选择器</span><span class="dl">"</span><span class="p">);</span>
<span class="c1">// 获取所有与选择器匹配的元素，返回一个数组</span>
<span class="nb">document</span><span class="p">.</span><span class="nx">querySelectorAll</span><span class="p">(</span><span class="dl">"</span><span class="s2">选择器</span><span class="dl">"</span><span class="p">);</span>
</code></pre></div></div>

<h4 id="222-自定义属性">2.2.2 自定义属性</h4>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">"dv"</span> <span class="na">data-name=</span><span class="s">"名字"</span> <span class="na">data-age=</span><span class="s">"20"</span> <span class="na">data-user-sex=</span><span class="s">"男"</span><span class="nt">&gt;&lt;/div&gt;</span>
</code></pre></div></div>
<p>HTML5通过 “data-属性名” 的方式创建自定义属性。</p>

<p>JavaScript 通过<code class="highlighter-rouge">dataset</code>对象获取自定义属性。</p>
<blockquote>
  <p>注：获取dataset中的属性名需要改成驼峰式命名，如 user-sex 改为 userSex</p>
</blockquote>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">dv</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="dl">'</span><span class="s1">dv</span><span class="dl">'</span><span class="p">)</span>
<span class="kd">var</span> <span class="nx">dt</span> <span class="o">=</span> <span class="nx">dv</span><span class="p">.</span><span class="nx">dataset</span><span class="p">;</span>
<span class="kd">var</span> <span class="nx">str</span> <span class="o">=</span> <span class="dl">''</span>
<span class="nx">str</span> <span class="o">=</span> <span class="nx">dt</span><span class="p">.</span><span class="nx">name</span> <span class="o">+</span> <span class="dl">'</span><span class="s1">,</span><span class="dl">'</span> <span class="o">+</span> <span class="nx">dt</span><span class="p">.</span><span class="nx">age</span> <span class="o">+</span> <span class="dl">'</span><span class="s1">,</span><span class="dl">'</span> <span class="o">+</span> <span class="nx">dt</span><span class="p">.</span><span class="nx">userSex</span><span class="p">;</span>
<span class="nx">dv</span><span class="p">.</span><span class="nx">innerText</span> <span class="o">=</span> <span class="nx">str</span><span class="p">;</span>
</code></pre></div></div>

<h4 id="223-类名操作">2.2.3 类名操作</h4>

<p><strong>添加类</strong></p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">selector</span><span class="p">.</span><span class="nx">classList</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="dl">"</span><span class="s2">类名</span><span class="dl">"</span><span class="p">)</span>
</code></pre></div></div>

<p><strong>删除类</strong></p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">selector</span><span class="p">.</span><span class="nx">classList</span><span class="p">.</span><span class="nx">remove</span><span class="p">(</span><span class="dl">"</span><span class="s2">类名</span><span class="dl">"</span><span class="p">);</span>
<span class="c1">// 如果不写类名的话，删除的是选中节点的所有类</span>
</code></pre></div></div>

<p><strong>切换类</strong></p>

<pre><code class="language-JS">selector.classList.toggle("类名");
</code></pre>

<p><strong>包含类</strong></p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">selector</span><span class="p">.</span><span class="nx">classList</span><span class="p">.</span><span class="nx">contains</span><span class="p">(</span><span class="dl">"</span><span class="s2">类名</span><span class="dl">"</span><span class="p">);</span>
<span class="c1">// 返回值是true或false</span>
</code></pre></div></div>

<h3 id="23-读取文件">2.3 读取文件</h3>

<p>通过 <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/FileReader"><code class="highlighter-rouge">FileReader</code></a> 接口读取文件内容。</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"file"</span> <span class="na">id=</span><span class="s">"f1"</span><span class="nt">&gt;</span>
<span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"submit"</span> <span class="na">id=</span><span class="s">"btn1"</span> <span class="na">value=</span><span class="s">"上传"</span><span class="nt">&gt;</span>
</code></pre></div></div>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">f1</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">querySelector</span><span class="p">(</span><span class="dl">'</span><span class="s1">#f1</span><span class="dl">'</span><span class="p">);</span>
<span class="kd">var</span> <span class="nx">btn1</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">querySelector</span><span class="p">(</span><span class="dl">'</span><span class="s1">#btn1</span><span class="dl">'</span><span class="p">);</span>
<span class="nx">btn1</span><span class="p">.</span><span class="nx">onclick</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
    <span class="c1">// 获取上传文件</span>
    <span class="kd">var</span> <span class="nx">fl1</span> <span class="o">=</span> <span class="nx">f1</span><span class="p">.</span><span class="nx">files</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
    <span class="c1">// 读取文件，创建读取文件的对象</span>
    <span class="kd">var</span> <span class="nx">fReader</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">FileReader</span><span class="p">();</span>
    <span class="c1">// 读取文件</span>
    <span class="nx">fReader</span><span class="p">.</span><span class="nx">readAsText</span><span class="p">(</span><span class="nx">fl1</span><span class="p">);</span>
    <span class="c1">// 开始读取文件的加载事件</span>
    <span class="nx">fReader</span><span class="p">.</span><span class="nx">onload</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
        <span class="kd">var</span> <span class="nx">style</span><span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="dl">'</span><span class="s1">style</span><span class="dl">'</span><span class="p">);</span>
        <span class="kd">var</span> <span class="nx">result</span> <span class="o">=</span> <span class="nx">fReader</span><span class="p">.</span><span class="nx">result</span><span class="p">;</span>
        <span class="nx">style</span><span class="p">.</span><span class="nx">innerHTML</span> <span class="o">=</span> <span class="nx">result</span><span class="p">;</span>
        <span class="nb">document</span><span class="p">.</span><span class="nx">querySelector</span><span class="p">(</span><span class="dl">'</span><span class="s1">head</span><span class="dl">'</span><span class="p">).</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">style</span><span class="p">)</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>
<p>新建 style.txt 文件，编辑内容：</p>
<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nf">#btn1</span><span class="p">{</span>
    <span class="nl">width</span><span class="p">:</span> <span class="m">70px</span><span class="p">;</span>
    <span class="nl">height</span><span class="p">:</span> <span class="m">30px</span><span class="p">;</span>
    <span class="nl">border</span><span class="p">:</span> <span class="nb">none</span><span class="p">;</span>
    <span class="nl">background-color</span><span class="p">:</span> <span class="no">green</span><span class="p">;</span>
    <span class="nl">font-size</span><span class="p">:</span> <span class="m">14px</span><span class="p">;</span>
    <span class="nl">color</span><span class="p">:</span> <span class="m">#fff</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>
<p>运行程序，上传 style.txt 文件，查看样式变化。</p>

<h3 id="24-网络状态检测">2.4 网络状态检测</h3>

<h4 id="241-navigatoronline">2.4.1 navigator.onLine</h4>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">state</span> <span class="o">=</span> <span class="nb">window</span><span class="p">.</span><span class="nb">navigator</span><span class="p">.</span><span class="nx">onLine</span><span class="p">;</span>
<span class="c1">// 返回布尔值，网络联通为true，反之为false</span>
<span class="k">if</span><span class="p">(</span><span class="nx">state</span><span class="p">){</span>
    <span class="nx">alert</span><span class="p">(</span><span class="dl">'</span><span class="s1">在线</span><span class="dl">'</span><span class="p">)</span>
<span class="p">}</span><span class="k">else</span><span class="p">{</span>
    <span class="nx">alert</span><span class="p">(</span><span class="dl">'</span><span class="s1">离线</span><span class="dl">'</span><span class="p">)</span>
<span class="p">}</span>
</code></pre></div></div>

<p>主流浏览器都支持。</p>

<h4 id="242-documentononline">2.4.2 document.ononline</h4>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">window</span><span class="p">.</span><span class="nx">ononline</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span>
    <span class="nx">alert</span><span class="p">(</span><span class="dl">'</span><span class="s1">连接上了</span><span class="dl">'</span><span class="p">)</span>
<span class="p">}</span>
<span class="nb">window</span><span class="p">.</span><span class="nx">onoffline</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span>
    <span class="nx">alert</span><span class="p">(</span><span class="dl">'</span><span class="s1">断网了</span><span class="dl">'</span><span class="p">)</span>
<span class="p">}</span>
</code></pre></div></div>
<p>浏览器支持情况：</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">事件</th>
      <th style="text-align: center">Chrome</th>
      <th style="text-align: center">IE</th>
      <th style="text-align: center">Firefox</th>
      <th style="text-align: center">Safari</th>
      <th style="text-align: center">Opera</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">ononline</td>
      <td style="text-align: center">不支持</td>
      <td style="text-align: center">IE8（IE11 已废弃）</td>
      <td style="text-align: center">3.0</td>
      <td style="text-align: center">不支持</td>
      <td style="text-align: center">不支持</td>
    </tr>
  </tbody>
</table>

<h3 id="25-获取地理定位不推荐">2.5 获取地理定位(不推荐)</h3>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">window</span><span class="p">.</span><span class="nb">navigator</span><span class="p">.</span><span class="nx">geolocation</span><span class="p">.</span><span class="nx">getCurrentPosition</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">position</span><span class="p">){</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">position</span><span class="p">)</span>
<span class="p">},</span><span class="kd">function</span><span class="p">(</span><span class="nx">msg</span><span class="p">){</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">msg</span><span class="p">)</span> <span class="c1">//获取失败返回相应信息</span>
<span class="p">})</span>
</code></pre></div></div>
<p>如果成功，则获取当前地理位置的经纬度。</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>position.coords.latitude  // 经度
position.coords.longitude // 纬度
</code></pre></div></div>
<blockquote>
  <p>注：若浏览器提示“获取您的位置”，请点击允许；
如果仍然报错”Network location provider at ‘https://www.googleapis.com/’ : No response received.”，请 <strong>科学上网</strong>。</p>
</blockquote>

<h3 id="26-存储">2.6 存储</h3>

<p>随着互联网的快速发展，基于网页的应用越来越普遍，同时也变得越来越复杂，为了满足各种各样的需求，回经常性在本地存储大量的数据，传统方式我们以 <code class="highlighter-rouge">document.cookie</code> 来进行存储，但是由于其存储大小只有4K左右，并且解析也相当的复杂，给开发带来诸多不便，HTML5 规范则提出解决方案，使用 <code class="highlighter-rouge">sessionStorage</code> 和 <code class="highlighter-rouge">localStorage</code> 存储数据。</p>

<p><strong>HTML5存储的特性：</strong></p>

<p>1、设置，读取方法<br />
2、容量较大<br />
3、能存储字符串</p>

<p><strong>sessionStorage:</strong></p>

<p>1、关闭浏览器窗口生命周期结束<br />
2、在同一个窗口下数据可以共享<br />
3、容量约5M</p>

<p><strong>localStorage:</strong></p>

<p>1、永久有效，除非手动删除<br />
2、可以多窗口共享<br />
3、容量约20M</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// 设置session：属性名字，值</span>
<span class="nb">window</span><span class="p">.</span><span class="nx">sessionStorage</span><span class="p">.</span><span class="nx">setItem</span><span class="p">(</span><span class="dl">"</span><span class="s2">name</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">张三</span><span class="dl">"</span><span class="p">);</span> 
<span class="c1">// 获取session的值</span>
<span class="nb">window</span><span class="p">.</span><span class="nx">sessionStorage</span><span class="p">.</span><span class="nx">getItem</span><span class="p">(</span><span class="dl">"</span><span class="s2">name</span><span class="dl">"</span><span class="p">);</span> 
<span class="c1">// 删除session</span>
<span class="nb">window</span><span class="p">.</span><span class="nx">sessionStorage</span><span class="p">.</span><span class="nx">removeItem</span><span class="p">(</span><span class="dl">"</span><span class="s2">name</span><span class="dl">"</span><span class="p">);</span>
<span class="c1">// 清空session</span>
<span class="nb">window</span><span class="p">.</span><span class="nx">sessionStorage</span><span class="p">.</span><span class="nx">clear</span><span class="p">();</span>

<span class="c1">// 设置localStorage：属性名字，值</span>
<span class="nb">window</span><span class="p">.</span><span class="nx">localStorage</span><span class="p">.</span><span class="nx">setItem</span><span class="p">(</span><span class="dl">"</span><span class="s2">name</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">张三</span><span class="dl">"</span><span class="p">);</span> 
<span class="c1">// 获取localStorage的值</span>
<span class="nb">window</span><span class="p">.</span><span class="nx">localStorage</span><span class="p">.</span><span class="nx">getItem</span><span class="p">(</span><span class="dl">"</span><span class="s2">name</span><span class="dl">"</span><span class="p">);</span> 
<span class="c1">// 删除localStorage</span>
<span class="nb">window</span><span class="p">.</span><span class="nx">localStorage</span><span class="p">.</span><span class="nx">removeItem</span><span class="p">(</span><span class="dl">"</span><span class="s2">name</span><span class="dl">"</span><span class="p">);</span>
<span class="c1">// 清空localStorage</span>
<span class="nb">window</span><span class="p">.</span><span class="nx">localStorage</span><span class="p">.</span><span class="nx">clear</span><span class="p">();</span>
</code></pre></div></div>

<h3 id="27-其他">2.7 其他</h3>

<p>关于多媒体和canvas的应用，会在新文章中单独讲解，敬请期待……</p>
:ET